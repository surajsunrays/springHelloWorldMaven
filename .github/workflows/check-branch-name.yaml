name: Check Branch Name

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - "*"

jobs:
  check-branch-name:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

#      - name: Extract PR Branch Name
#        id: extract-branch-name
#        run: |
#          # Extract the branch name from the GITHUB_REF
#          PR_BRANCH_NAME=$(echo "${GITHUB_REF#refs/heads/}")
#          echo "PR Branch Name: $PR_BRANCH_NAME"
#
#      - name: Set PR Branch Name as an Output
##        run: echo "::set-output name=pr_branch_name::$PR_BRANCH_NAME"
#        run: echo "{pr_branch_name}={$PR_BRANCH_NAME}" >> $GITHUB_OUTPUT
#
#      - name: Use PR Branch Name in Another Step
#        run: echo "The PR Branch Name is ${{ steps.extract-branch-name.outputs.pr_branch_name }}"

#      - name: Set output
#        id: vars
#        run: echo "BRANCH=$(echo $GITHUB_HEAD_REF)" >> $GITHUB_ENV
##
#      - name: Check output
#        run: echo ${{ steps.vars.outputs.short_ref }}

      - name: Set env.BRANCH
        id: branch-name
        run: |
          echo "PR_BRANCH=$GITHUB_HEAD_REF" >> $GITHUB_OUTPUT
#          echo "PR_BRANCH=$(echo $GITHUB_REF | cut -d'/' -f 3)" >> $GITHUB_ENV


      - name: Print All Pipeline Variables
        run: |
          for var in $(compgen -e); do
            echo "$var=${!var}"
          done

      - name: Check Branch Name
        env:
          PR_BRANCH_NAME: ${{ steps.branch-name.outputs.PR_BRANCH }}
        run: |
          #branch_name=$(echo "${{ github.ref }}" | sed 's#refs/heads/#')
          #branch_name=$(git symbolic-ref --short HEAD)
          echo $PR_BRANCH_NAME
          echo printenv
          if [[ "$PR_BRANCH_NAME" =~ ^feature/.*$ ]]; then
            echo "Branch name is valid: $PR_BRANCH_NAME"
          else
            echo "Branch name is invalid: $PR_BRANCH_NAME"
            exit 1
          fi
